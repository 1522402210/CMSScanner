require 'spec_helper'

describe CMSScanner::Vulnerability do
  subject(:vuln)   { described_class.new(title, references) }
  let(:title)      { 'Test Vuln' }
  let(:references) { {} }

  describe '#new' do
    context 'when no references' do
      [:cves, :secunia_ids, :osvdb_ids, :exploitdb_ids, :urls,
       :msf_modules, :packetstorm_ids
      ].each do |attribute|
        its(attribute) { should eql([]) }
      end

      [:cve_urls, :secunia_urls, :osvdb_urls, :exploitdb_urls, :msf_urls,
       :packetstorm_urls
      ].each do |attribute|
        its(attribute) { should eql([]) }
      end
    end

    context 'when references provided as string' do
      let(:references) do
        {
          cve: '11',
          secunia: '12',
          osvdb: '13',
          exploitdb: '14',
          url: 'single-url',
          metasploit: '/exploit/yolo',
          packetstorm: '15'
        }
      end

      its(:cves)     { should eql %w(11) }
      its(:cve_urls) { should eql %w(http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-11) }

      its(:secunia_ids)  { should eql %w(12) }
      its(:secunia_urls) { should eql %w(https://secunia.com/advisories/12) }

      its(:osvdb_ids)  { should eql %w(13) }
      its(:osvdb_urls) { should eql %w(http://osvdb.org/13) }

      its(:exploitdb_ids)  { should eql %w(14) }
      its(:exploitdb_urls) { should eql %w(http://www.exploit-db.com/exploits/14/) }

      its(:urls) { should eql %w(single-url) }

      its(:msf_modules) { should eql %w(/exploit/yolo) }
      its(:msf_urls) { should eql %w(http://www.rapid7.com/db/modules/exploit/yolo) }

      its(:packetstorm_ids)  { should eq %w(15) }
      its(:packetstorm_urls) { should eql %w(http://packetstormsecurity.com/files/15/) }
    end

    context 'when references provided as array' do
      xit
    end
  end
end
